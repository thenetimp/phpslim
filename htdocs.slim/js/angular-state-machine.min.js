/**
 * AngularJS service to implement a simple finite state machine.
 * @version v0.2.0 - 2014-01-27
 * @link https://github.com/tafax/angular-state-machine
 * @author Matteo Tafani Alunno <matteo.tafanialunno@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";var FSM=angular.module("FSM",[]);FSM.provider("stateMachine",function(){function a(a,b){this.getJson=function(){return b},this.extend=function(b){a=Object.merge(a,b)};var c={};this.getStates=function(){return c};var d=[];this.getMessages=function(){return d};var e={};this.getTransitions=function(){return e},this.configure=function(){if(!a.hasOwnProperty("init"))throw"You have to create 'init' state.";for(var b in a){var f=a[b];f.name=b;var g={};if(f.hasOwnProperty("transitions")){g=f.transitions;for(var h in g)d.indexOf(h)<0&&d.push(h);delete f.transitions}e.hasOwnProperty(b)||(e[b]={}),angular.extend(e[b],g),c.hasOwnProperty(b)||(c[b]={}),angular.extend(c[b],f)}}}function b(){}function c(){b.call(this),this.current=null}function d(a,b){c.call(this),this.http=a,this.q=b,this.promise=null}function e(a,b,c){this.initialize=function(){b.initialize(c)},this.getStates=function(){return b.getStates(c)},this.getMessages=function(){return b.getMessages(c)},this.hasMessage=function(a){return b.hasMessage(c,a)},this.isAvailable=function(a){return b.isAvailable(c,a)},this.available=function(){return b.available(c)},this.send=function(d,e){b.send(a,c,d,e)}}Object.merge=function(a,b){var c={};for(var d in a)c[d]=a[d],d in b&&"object"==typeof a[d]&&null!==d&&(c[d]=Object.merge(a[d],b[d]));for(var e in b)e in c||(c[e]=b[e]);return c},b.prototype.initialize=function(){},b.prototype.getStates=function(){},b.prototype.getMessages=function(){},b.prototype.hasMessage=function(){},b.prototype.isAvailable=function(){},b.prototype.available=function(){},b.prototype.send=function(){},b.prototype=new b,c.prototype.initialize=function(a){a.configure();var b=a.getStates();this.current=b.init,this.current.params={}},c.prototype.getStates=function(a){return Object.keys(a.getStates())},c.prototype.getMessages=function(a){return a.getMessages()},c.prototype.hasMessage=function(a,b){var c=a.getMessages();return c.indexOf(b)>=0},c.prototype.isAvailable=function(a,b){var c=a.getTransitions(),d=c[this.current.name];return d.hasOwnProperty(b)},c.prototype.available=function(a){var b=a.getTransitions(),c=b[this.current.name];return Object.keys(c)},c.prototype.send=function(a,b,c,d){if(b.getMessages().indexOf(c)>=0){var e=b.getTransitions();if(e.hasOwnProperty(this.current.name)){var f=e[this.current.name];if(f.hasOwnProperty(c)){var g=f[c];if(g instanceof Array){var h=[];for(var i in g){var j=g[i];a.invoke(j.predicate,this,this.current)&&h.push(j.to)}if(h.length>1)throw"Unable to execute transition in state '"+this.current.name+"'. Two predicates was passed.";g=h[0]}var k=b.getStates(),l=k[g],m={};m=Object.merge(m,this.current),d&&(m.params=Object.merge(m.params,d));var n=a.invoke(l.action,this,m);!n&&this.current.params?l.params=this.current.params:(l.hasOwnProperty("params")||(l.params={}),l.params=Object.merge(l.params,n)),this.current=l}}}},d.prototype=new c,d.prototype.initialize=function(a){this.promise=this.http({method:"GET",url:"file://"+a.getJson()}).then(function(b){a.extend(b.data),c.prototype.initialize(a)},function(a){throw"Unable to load '"+json+"'. The server responds with status "+a.status+"."})},d.prototype.getStates=function(a){if(null!==this.promise){var b=this.q.defer();return this.promise.then(function(){b.resolve(c.prototype.getStates(a))}),b.promise}throw"You have to initialize the machine."},d.prototype.getMessages=function(a){if(null!==this.promise){var b=this.q.defer();return this.promise.then(function(){b.resolve(c.prototype.getMessages(a))}),b.promise}throw"You have to initialize the machine."},d.prototype.hasMessage=function(a,b){if(null!==this.promise){var d=this.q.defer();return this.promise.then(function(){d.resolve(c.prototype.hasMessage(a,b))}),d.promise}throw"You have to initialize the machine."},d.prototype.isAvailable=function(a,b){if(null!==this.promise){var d=this.q.defer();return this.promise.then(function(){d.resolve(c.prototype.isAvailable(a,b))}),d.promise}throw"You have to initialize the machine."},d.prototype.available=function(a){if(null!==this.promise){var b=this.q.defer();return this.promise.then(function(){b.resolve(c.prototype.available(a))}),b.promise}throw"You have to initialize the machine."},d.prototype.send=function(a,b,d,e){if(null!==this.promise){var f=this.q.defer();return this.promise.then(function(){f.resolve(c.prototype.send(a,b,d,e))}),f.promise}throw"You have to initialize the machine."};var f=null,g={},h=!1;this.config=function(a){g=a},this.load=function(a){f=a,h=!0},this.$get=["$injector",function(b){var d=h?null:new c;return new e(b,d,new a(g,f))}]});